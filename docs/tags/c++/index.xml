<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on wangjd&#39;s blog</title>
    <link>https://wantmoretime.github.io/wjdsite/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on wangjd&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Jan 2020 15:20:00 +0800</lastBuildDate>
    
	<atom:link href="https://wantmoretime.github.io/wjdsite/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The C&#43;&#43; Object Model</title>
      <link>https://wantmoretime.github.io/wjdsite/c&#43;&#43;/c&#43;&#43;_object_model/</link>
      <pubDate>Fri, 17 Jan 2020 15:20:00 +0800</pubDate>
      
      <guid>https://wantmoretime.github.io/wjdsite/c&#43;&#43;/c&#43;&#43;_object_model/</guid>
      <description></description>
    </item>
    
    <item>
      <title>缓存队列</title>
      <link>https://wantmoretime.github.io/wjdsite/c&#43;&#43;/cache_queue/</link>
      <pubDate>Wed, 15 Jan 2020 10:38:08 +0800</pubDate>
      
      <guid>https://wantmoretime.github.io/wjdsite/c&#43;&#43;/cache_queue/</guid>
      <description>&lt;p&gt;使用缓存队列接收消息，避免高并发时消息漏接丢失的情况，提供一种消息缓冲的机制，还可以将消息进行统一分发处理，方便管理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43;单例模式</title>
      <link>https://wantmoretime.github.io/wjdsite/c&#43;&#43;/c&#43;&#43;_sington_template/</link>
      <pubDate>Thu, 09 Jan 2020 11:40:27 +0800</pubDate>
      
      <guid>https://wantmoretime.github.io/wjdsite/c&#43;&#43;/c&#43;&#43;_sington_template/</guid>
      <description>单例模式用于保证系统里面一个类最多只能存在一个实例，例如缓冲池、数据库连接池、线程池、应用服务实例等。 饿汉式 class Singleton { public: static Singleton &amp;amp;get_instance() { static Singleton instance; return instance; } private: Singleton()</description>
    </item>
    
    <item>
      <title>C&#43;&#43;函数指针</title>
      <link>https://wantmoretime.github.io/wjdsite/c&#43;&#43;/function_pointers/</link>
      <pubDate>Mon, 06 Jan 2020 20:38:00 +0800</pubDate>
      
      <guid>https://wantmoretime.github.io/wjdsite/c&#43;&#43;/function_pointers/</guid>
      <description>&lt;p&gt;C++函数指针以及map管理函数指针的应用&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43;11 emplace相关函数</title>
      <link>https://wantmoretime.github.io/wjdsite/c&#43;&#43;/emplace_back/</link>
      <pubDate>Sun, 05 Jan 2020 17:32:29 +0800</pubDate>
      
      <guid>https://wantmoretime.github.io/wjdsite/c&#43;&#43;/emplace_back/</guid>
      <description>&lt;p&gt;C++11中，顺序容器(如vector、deque、list)，新标准引入了三个新成员：emplace_front、emplace和emplace_back代替push_front、insert和push_back，可提高效率。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>